// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: event.sql

package db

import (
	"context"
	"database/sql"
)

const createEvent = `-- name: CreateEvent :execresult
INSERT INTO event (id, name) VALUES (?, ?)
`

type CreateEventParams struct {
	ID   string
	Name string
}

func (q *Queries) CreateEvent(ctx context.Context, arg CreateEventParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, createEvent, arg.ID, arg.Name)
}

const deleteEvent = `-- name: DeleteEvent :execresult
DELETE FROM event WHERE id = ?
`

func (q *Queries) DeleteEvent(ctx context.Context, id string) (sql.Result, error) {
	return q.db.ExecContext(ctx, deleteEvent, id)
}

const getEventByID = `-- name: GetEventByID :one
SELECT id, name FROM event WHERE id = ?
`

func (q *Queries) GetEventByID(ctx context.Context, id string) (Event, error) {
	row := q.db.QueryRowContext(ctx, getEventByID, id)
	var i Event
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
